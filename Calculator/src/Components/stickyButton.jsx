import React, { useState } from 'react';
import { openModel } from './Model';

export default function StickyButton() {
  const [isOpen, setIsOpen] = useState(false);

  function toggleWindow() {
    setIsOpen(prev => !prev);
  }

  return (
    <>
      <style>
        {`
          #startWindow {
            transition: opacity 0.4s ease, transform 0.4s ease;
          }

          .show {
            opacity: 1;
            transform: translateY(0);
            pointer-events: auto;
          }

          .hide {
            opacity: 0;
            transform: translateY(20px);
            pointer-events: none;
          }
        `}
      </style>

      {/* Floating Button */}
      <button
        type='button'
        className='p-4 rounded-full bg-[#f06b6d] absolute right-10 bottom-10 cursor-pointer hover:shadow-md transition-all duration-300 hover:shadow-[#dc898a]'
        onClick={toggleWindow} >
        <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M11.76 15.0533C11.635 15.1773 11.5359 15.3248 11.4682 15.4872C11.4005 15.6497 11.3656 15.824 11.3656 16C11.3656 16.176 11.4005 16.3503 11.4682 16.5128C11.5359 16.6753 11.635 16.8227 11.76 16.9467C12.0098 17.195 12.3478 17.3344 12.7 17.3344C13.0523 17.3344 13.3902 17.195 13.64 16.9467C13.765 16.8227 13.8642 16.6753 13.9319 16.5128C13.9996 16.3503 14.0344 16.176 14.0344 16C14.0344 15.824 13.9996 15.6497 13.9319 15.4872C13.8642 15.3248 13.765 15.1773 13.64 15.0533C13.3902 14.805 13.0523 14.6656 12.7 14.6656C12.3478 14.6656 12.0098 14.805 11.76 15.0533ZM15.0534 18.36C14.805 18.6098 14.6656 18.9478 14.6656 19.3C14.6656 19.6523 14.805 19.9902 15.0534 20.24C15.1773 20.365 15.3248 20.4642 15.4873 20.5319C15.6497 20.5996 15.824 20.6344 16 20.6344C16.176 20.6344 16.3503 20.5996 16.5128 20.5319C16.6753 20.4642 16.8227 20.365 16.9467 20.24C17.195 19.9902 17.3344 19.6523 17.3344 19.3C17.3344 18.9478 17.195 18.6098 16.9467 18.36C16.8227 18.235 16.6753 18.1358 16.5128 18.0681C16.3503 18.0005 16.176 17.9656 16 17.9656C15.824 17.9656 15.6497 18.0005 15.4873 18.0681C15.3248 18.1358 15.1773 18.235 15.0534 18.36ZM27.0534 5.02667C25.603 3.5643 23.6444 2.71768 21.5855 2.66304C19.5266 2.6084 17.5259 3.34996 16 4.73334C14.4812 3.36611 12.4966 2.63198 10.4536 2.68156C8.41066 2.73115 6.4641 3.5607 5.01335 5C3.57204 6.45312 2.74248 8.40339 2.69536 10.4495C2.64824 12.4957 3.38713 14.4821 4.76002 16C3.73358 17.1475 3.06007 18.5668 2.8203 20.0877C2.58053 21.6085 2.78469 23.1662 3.40828 24.5738C4.03187 25.9815 5.0484 27.1793 6.33589 28.0235C7.62338 28.8678 9.12713 29.3226 10.6667 29.3333C12.6403 29.3354 14.5431 28.5981 16 27.2667C17.5196 28.6378 19.507 29.3744 21.5531 29.3247C23.5993 29.2751 25.5486 28.4432 27 27C28.4395 25.5452 29.2666 23.5939 29.3113 21.5478C29.3559 19.5017 28.6147 17.5163 27.24 16C28.6147 14.4838 29.3559 12.4983 29.3113 10.4522C29.2666 8.40606 28.4395 6.45485 27 5L27.0534 5.02667ZM25.1067 6.89334C26.0339 7.84719 26.5712 9.11312 26.6132 10.4427C26.6551 11.7723 26.1986 13.0696 25.3334 14.08L17.92 6.66667C18.9392 5.82098 20.2325 5.37721 21.5563 5.41896C22.88 5.46071 24.1428 5.9851 25.1067 6.89334ZM6.89335 25.1067C5.96611 24.1528 5.4288 22.8869 5.38686 21.5573C5.34493 20.2277 5.80139 18.9304 6.66669 17.92L14.1334 25.3867C13.1028 26.2374 11.7952 26.679 10.46 26.6274C9.12467 26.5757 7.8551 26.0344 6.89335 25.1067ZM25.1067 25.1067C24.0943 26.0749 22.7475 26.6153 21.3467 26.6153C19.9459 26.6153 18.599 26.0749 17.5867 25.1067L6.92002 14.44C5.92668 13.4407 5.36912 12.089 5.36912 10.68C5.36912 9.27101 5.92668 7.91927 6.92002 6.92C7.91928 5.92666 9.27103 5.36911 10.68 5.36911C12.089 5.36911 13.4408 5.92666 14.44 6.92L25.1067 17.5867C26.1 18.5859 26.6576 19.9377 26.6576 21.3467C26.6576 22.7557 26.1 24.1074 25.1067 25.1067ZM18.36 15.0533C18.235 15.1773 18.1359 15.3248 18.0682 15.4872C18.0005 15.6497 17.9656 15.824 17.9656 16C17.9656 16.176 18.0005 16.3503 18.0682 16.5128C18.1359 16.6753 18.235 16.8227 18.36 16.9467C18.6098 17.195 18.9478 17.3344 19.3 17.3344C19.6523 17.3344 19.9902 17.195 20.24 16.9467C20.365 16.8227 20.4642 16.6753 20.5319 16.5128C20.5996 16.3503 20.6344 16.176 20.6344 16C20.6344 15.824 20.5996 15.6497 20.5319 15.4872C20.4642 15.3248 20.365 15.1773 20.24 15.0533C19.9902 14.805 19.6523 14.6656 19.3 14.6656C18.9478 14.6656 18.6098 14.805 18.36 15.0533ZM15.0534 11.76C14.805 12.0098 14.6656 12.3478 14.6656 12.7C14.6656 13.0522 14.805 13.3902 15.0534 13.64C15.1773 13.765 15.3248 13.8642 15.4873 13.9319C15.6497 13.9995 15.824 14.0344 16 14.0344C16.176 14.0344 16.3503 13.9995 16.5128 13.9319C16.6753 13.8642 16.8227 13.765 16.9467 13.64C17.195 13.3902 17.3344 13.0522 17.3344 12.7C17.3344 12.3478 17.195 12.0098 16.9467 11.76C16.8227 11.635 16.6753 11.5358 16.5128 11.4681C16.3503 11.4005 16.176 11.3656 16 11.3656C15.824 11.3656 15.6497 11.4005 15.4873 11.4681C15.3248 11.5358 15.1773 11.635 15.0534 11.76Z" fill="white"/> </svg>
      </button>

      {/* Pop-up Window */}
      <div
        id='startWindow'
        className={`w-[290px] absolute right-10 bottom-30 ${isOpen ? 'show' : 'hide'}`}
      >
        <div className='w-full bg-white shadow-[0_0_20px_0_rgba(0,0,0,0.15)] rounded-3xl px-3 py-4 mb-5'>
          <p className='font-bold'>Risk Assessment Calculators</p>
          <p className='text-zinc-600 text-sm'>
            Estimate your risk for health conditions based on common predictors.
          </p>
        </div>
        <div className='w-full'>
          <button
            className='bg-[#f06b6d] hover:shadow-md transition-all duration-300 hover:shadow-[#dc898a] text-white p-2 rounded-xl w-full font-bold cursor-pointer relative group overflow-hidden'
            onClick={openModel}
          >
            <div className='w-1.5 h-22 bg-white rotate-40 opacity-70 absolute -top-8 -left-6 group-hover:translate-x-84 transition-all duration-700 shadow-md shadow-white'></div>
            Start now
          </button>
        </div>
      </div>
    </>
  );
}
